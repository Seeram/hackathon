services:
  # PostgreSQL Database for Development
  postgres:
    image: postgres:15-alpine
    container_name: postgres-dev
    environment:
      POSTGRES_DB: api
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./services/db:/docker-entrypoint-initdb.d
    networks:
      - app-network

  # Express TSOA API in Development Mode
  api-dev:
    build:
      context: ./services/api
      dockerfile: Dockerfile
      target: builder
    container_name: api-dev
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: api
      DB_USER: postgres
      DB_PASSWORD: password
      # AGENTS_SERVICE_URL: http://agents-dev:5000  # Removed agents service
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - app-network
    volumes:
      - ./services/api:/app
      - /app/node_modules
    command: npm run dev:watch
    restart: unless-stopped

  # React Frontend in Development Mode
  frontend-dev:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
      target: development
    container_name: frontend-dev
    environment:
      NODE_ENV: development
      REACT_APP_API_URL: http://localhost:3000
    ports:
      - "3001:3000"
    depends_on:
      - api-dev
    networks:
      - app-network
    volumes:
      - ./services/frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    restart: unless-stopped

  # Dozzle - Docker Log Viewer for Development
  dozzle-dev:
    image: amir20/dozzle:latest
    container_name: dozzle-dev
    ports:
      - "9998:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      DOZZLE_LEVEL: debug
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_dev_data:

networks:
  app-network:
    driver: bridge
