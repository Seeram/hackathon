{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ChatMessage": {
				"properties": {
					"id": {
						"type": "string"
					},
					"text": {
						"type": "string"
					},
					"sender": {
						"type": "string",
						"enum": [
							"user",
							"llm"
						]
					},
					"timestamp": {
						"type": "string",
						"format": "date-time"
					},
					"isVoiceMessage": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"text",
					"sender",
					"timestamp"
				],
				"type": "object",
				"additionalProperties": true
			},
			"ChatResponse": {
				"properties": {
					"message": {
						"$ref": "#/components/schemas/ChatMessage"
					},
					"success": {
						"type": "boolean"
					}
				},
				"required": [
					"message",
					"success"
				],
				"type": "object",
				"additionalProperties": true
			},
			"ChatRequest": {
				"properties": {
					"message": {
						"type": "string"
					},
					"ticketId": {
						"type": "number",
						"format": "double"
					},
					"isVoiceMessage": {
						"type": "boolean"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": true
			},
			"VoiceRecordingResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"transcription": {
						"type": "string"
					},
					"processedText": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": true
			},
			"AIChatLog": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"ticket_id": {
						"type": "number",
						"format": "double"
					},
					"message_type": {
						"type": "string",
						"enum": [
							"chat",
							"voice",
							"suggestion"
						]
					},
					"user_message": {
						"type": "string"
					},
					"ai_response": {
						"type": "string"
					},
					"voice_transcription": {
						"type": "string"
					},
					"session_id": {
						"type": "string"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"ticket_id",
					"message_type",
					"user_message",
					"ai_response",
					"created_at"
				],
				"type": "object",
				"additionalProperties": true
			},
			"TicketAttachment": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"file_name": {
						"type": "string"
					},
					"file_type": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"file_name",
					"file_type"
				],
				"type": "object",
				"additionalProperties": true
			},
			"Ticket": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"ticket_number": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"location": {
						"type": "string"
					},
					"priority": {
						"type": "string",
						"enum": [
							"low",
							"medium",
							"high",
							"urgent"
						]
					},
					"status": {
						"type": "string",
						"enum": [
							"assigned",
							"in_progress",
							"completed",
							"cancelled"
						]
					},
					"assigned_technician_id": {
						"type": "number",
						"format": "double"
					},
					"customer_name": {
						"type": "string"
					},
					"customer_phone": {
						"type": "string"
					},
					"scheduled_date": {
						"type": "string",
						"format": "date-time"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time"
					},
					"attachments": {
						"items": {
							"$ref": "#/components/schemas/TicketAttachment"
						},
						"type": "array"
					},
					"ai_chat_logs": {
						"items": {
							"$ref": "#/components/schemas/AIChatLog"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"ticket_number",
					"title",
					"priority",
					"status",
					"assigned_technician_id",
					"created_at",
					"updated_at"
				],
				"type": "object",
				"additionalProperties": true
			},
			"CreateTicketRequest": {
				"properties": {
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"location": {
						"type": "string"
					},
					"priority": {
						"type": "string",
						"enum": [
							"low",
							"medium",
							"high",
							"urgent"
						]
					},
					"assigned_technician_id": {
						"type": "number",
						"format": "double"
					},
					"customer_name": {
						"type": "string"
					},
					"customer_phone": {
						"type": "string"
					},
					"scheduled_date": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"title",
					"assigned_technician_id"
				],
				"type": "object",
				"additionalProperties": true
			},
			"UpdateTicketRequest": {
				"properties": {
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"location": {
						"type": "string"
					},
					"priority": {
						"type": "string",
						"enum": [
							"low",
							"medium",
							"high",
							"urgent"
						]
					},
					"status": {
						"type": "string",
						"enum": [
							"assigned",
							"in_progress",
							"completed",
							"cancelled"
						]
					},
					"customer_name": {
						"type": "string"
					},
					"customer_phone": {
						"type": "string"
					},
					"scheduled_date": {
						"type": "string",
						"format": "date-time"
					}
				},
				"type": "object",
				"additionalProperties": true
			},
			"CreateChatLogRequestBody": {
				"properties": {
					"message_type": {
						"type": "string",
						"enum": [
							"chat",
							"voice",
							"suggestion"
						]
					},
					"user_message": {
						"type": "string"
					},
					"ai_response": {
						"type": "string"
					},
					"voice_transcription": {
						"type": "string"
					},
					"session_id": {
						"type": "string"
					}
				},
				"required": [
					"message_type",
					"user_message",
					"ai_response"
				],
				"type": "object",
				"additionalProperties": true
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "Express TSOA API",
		"version": "1.0.0",
		"description": "A simple Express API using TSOA for TypeScript with Swagger documentation"
	},
	"openapi": "3.0.0",
	"paths": {
		"/tickets/chat": {
			"post": {
				"operationId": "SendChatMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChatResponse"
								}
							}
						}
					}
				},
				"description": "Send a chat message to the AI assistant",
				"tags": [
					"AI Assistant"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChatRequest"
							}
						}
					}
				}
			}
		},
		"/tickets/voice-recording": {
			"post": {
				"operationId": "ProcessVoiceRecording",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VoiceRecordingResponse"
								}
							}
						}
					},
					"400": {
						"description": "Invalid audio file"
					}
				},
				"description": "Process voice recording and return transcription/response",
				"tags": [
					"AI Assistant"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"audio": {
										"type": "string",
										"format": "binary"
									},
									"ticketId": {
										"type": "string"
									}
								},
								"required": [
									"audio"
								]
							}
						}
					}
				}
			}
		},
		"/tickets/{ticketId}/ai-suggestions": {
			"post": {
				"operationId": "GetTicketSuggestions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"context": {
											"type": "string"
										},
										"suggestions": {
											"items": {
												"type": "string"
											},
											"type": "array"
										}
									},
									"required": [
										"context",
										"suggestions"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Ticket not found"
					}
				},
				"description": "Get AI assistant suggestions for a specific ticket",
				"tags": [
					"AI Assistant"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "ticketId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"category": {
										"type": "string"
									},
									"context": {
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/chat-logs/{chatLogId}": {
			"get": {
				"operationId": "GetChatLog",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AIChatLog"
								}
							}
						}
					},
					"404": {
						"description": "Chat log not found"
					}
				},
				"description": "Get a specific chat log by ID",
				"tags": [
					"Chat Logs"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "chatLogId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteChatLog",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Chat log not found"
					}
				},
				"description": "Delete a specific chat log by ID",
				"tags": [
					"Chat Logs"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "chatLogId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/technicians/{technicianId}/tickets": {
			"get": {
				"operationId": "GetTechnicianTickets",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Ticket"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all tickets assigned to a technician",
				"tags": [
					"Technicians"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "technicianId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"assigned",
								"in_progress",
								"completed",
								"cancelled"
							]
						}
					}
				]
			}
		},
		"/technicians/{technicianId}/tickets/{ticketId}": {
			"get": {
				"operationId": "GetTicket",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Ticket"
								}
							}
						}
					},
					"404": {
						"description": "Ticket not found"
					}
				},
				"description": "Get a specific ticket by ID (must belong to technician) - no chat logs",
				"tags": [
					"Technicians"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "technicianId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "path",
						"name": "ticketId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/technicians/{technicianId}/tickets/{ticketId}/status": {
			"patch": {
				"operationId": "UpdateTicketStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Ticket not found"
					}
				},
				"description": "Update ticket status",
				"tags": [
					"Technicians"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "technicianId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "path",
						"name": "ticketId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"status": {
										"type": "string",
										"enum": [
											"assigned",
											"in_progress",
											"completed",
											"cancelled"
										]
									}
								},
								"required": [
									"status"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/tickets": {
			"get": {
				"operationId": "GetAllTickets",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Ticket"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all tickets",
				"tags": [
					"Tickets"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "technicianId",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "priority",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateTicket",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Ticket"
								}
							}
						}
					}
				},
				"description": "Create a new ticket",
				"tags": [
					"Tickets"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateTicketRequest"
							}
						}
					}
				}
			}
		},
		"/tickets/{id}": {
			"get": {
				"operationId": "GetTicket",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Ticket"
								}
							}
						}
					},
					"404": {
						"description": "Ticket not found"
					}
				},
				"description": "Get a specific ticket by ID with AI chat logs",
				"tags": [
					"Tickets"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateTicket",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Ticket"
								}
							}
						}
					},
					"404": {
						"description": "Ticket not found"
					}
				},
				"description": "Update a ticket",
				"tags": [
					"Tickets"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateTicketRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteTicket",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Ticket not found"
					}
				},
				"description": "Delete a ticket",
				"tags": [
					"Tickets"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/tickets/{ticketId}/chat-logs": {
			"get": {
				"operationId": "GetTicketChatLogs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/AIChatLog"
									},
									"type": "array"
								}
							}
						}
					},
					"404": {
						"description": "Ticket not found"
					}
				},
				"description": "Get all chat logs for a specific ticket",
				"tags": [
					"Tickets"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "ticketId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "offset",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "AddChatLogToTicket",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AIChatLog"
								}
							}
						}
					},
					"404": {
						"description": "Ticket not found"
					}
				},
				"description": "Add a new chat log to a specific ticket",
				"tags": [
					"Tickets"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "ticketId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateChatLogRequestBody"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	],
	"host": "localhost:3000",
	"basePath": "/api",
	"schemes": [
		"http",
		"https"
	],
	"consumes": [
		"application/json"
	],
	"produces": [
		"application/json"
	]
}